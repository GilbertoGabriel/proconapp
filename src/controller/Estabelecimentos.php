<?php

	/**
	 * Generated by Getz Framework
	 *
	 * @author Mario Sakamoto <mskamot@gmail.com>
	 * @see https://wtag.com.br/getz
	 */
	 
	use lib\getz;
	use src\logic;	 
	use src\model;	 
	
	require_once($_DOCUMENT_ROOT . "/lib/getz/Activator.php");
	
	/*
	 * Filters
	 */
	$where = "";
	
	if ($search != "")
		$where = "estabelecimentos.estabelecimento LIKE \"%" . $search . "%\"";	
		
	if ($code != "")
		$where = "estabelecimentos.id = " . $code;
	
	if (isset($_GET["friendly"]))
		$where = "estabelecimentos.estabelecimento = \"" . removeLine($_GET["friendly"]) . "\"";	
		
	$limit = "";	
		
	if ($order != "") {
		$o = explode("<gz>", $order);

		$limit = $o[0] . " " . $o[1] . " LIMIT " . 
				(($position * $itensPerPage) - $itensPerPage) . ", " . $itensPerPage;
				
	} else {
		if ($position > 0 && $itensPerPage > 0) {
			$limit = "estabelecimentos.id DESC LIMIT " . 
					(($position * $itensPerPage) - $itensPerPage) . ", " . $itensPerPage;	
		}
	}
	
	/**************************************************
	 * Webpage
	 **************************************************/		
	
	/*
	 * Page
	 */
	if ($method == "page") {
		/*
		 * SEO
		 */
		$view->setTitle(ucfirst($screen));
		$view->setDescription("");
		$view->setKeywords("");
		
		$daoFactory->beginTransaction();
		$response["estabelecimentos"] = $daoFactory->getEstabelecimentosDao()->read($where, $limit, true);
		$daoFactory->close();
		
		if (isset($_GET["friendly"]))
			$view->setTitle($response["estabelecimentos"][0]["estabelecimentos.estabelecimento"]);

		echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . "/html/header.html");
		
		echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . 
				(isset($_GET["friendly"]) ? "/html/@_PAGE.html" : "/html/estabelecimentos.html"), $response);
		
		echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . "/html/footer.html");
	}
	
	/**************************************************
	 * Webservice
	 **************************************************/	

	/*
	 * Create
	 */
	else if ($method == "api-create") {
		enableCORS();
		if (isset($_POST["request"])) {
			$request = json_decode($_POST["request"], true);
			// $request[0]["@_PARAM"] = $daoFactory->prepare($request[0]["@_PARAM"]); // Prepare with sql injection.

			$daoFactory->beginTransaction();
			$estabelecimentos = new model\Estabelecimentos();
			$estabelecimentos->setEstabelecimento(logicNull($request["estabelecimentos.estabelecimento"]));
			$estabelecimentos->setCnpj(logicNull($request["estabelecimentos.cnpj"]));
			$estabelecimentos->setTelefone(logicNull($request["estabelecimentos.telefone"]));
			$estabelecimentos->setCelular(logicNull($request["estabelecimentos.celular"]));
			$estabelecimentos->setCelular2(logicNull($request["estabelecimentos.celular2"]));
			$estabelecimentos->setEmail(logicNull($request["estabelecimentos.email"]));
			$estabelecimentos->setCadastrado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
			$estabelecimentos->setModificado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
			$estabelecimentos->setLogradouro(logicNull($request["estabelecimentos.logradouro"]));
			$estabelecimentos->setBairro(logicNull($request["estabelecimentos.bairro"]));
			$estabelecimentos->setNumero(logicZero($request["estabelecimentos.numero"]));
			$estabelecimentos->setCidade(logicNull($request["estabelecimentos.cidade"]));
			$estabelecimentos->setCep(logicNull($request["estabelecimentos.cep"]));
			
			$resultDao = $daoFactory->getEstabelecimentosDao()->create($estabelecimentos);

			if ($resultDao) {
				$daoFactory->commit();
				$response["message"] = "success";
			} else {							
				$daoFactory->rollback();
				$response["message"] = "error";
			}

			$daoFactory->close();
		} else {
			$response["message"] = "error";
		}
		
		echo $view->json($response);
	}
	
	/*
	 * Read
	 */
	else if ($method == "api-read") {
		enableCORS();
		
		if (isset($_POST["request"])) {
			$request = json_decode($_POST["request"], true);
			
			$limit = "estabelecimentos.id DESC LIMIT " . 
					(($request[0]["page"] * $request[0]["pageSize"]) - 
					$request[0]["pageSize"]) . ", " . $request[0]["pageSize"];	
		}
		
		$daoFactory->beginTransaction();
		$estabelecimentos = $daoFactory->getEstabelecimentosDao()->read("", $limit, false);
		$daoFactory->close();
		
		echo $view->json($estabelecimentos);
	}
	
	/*
	 * Update
	 */
	else if ($method == "api-update") {	
		enableCORS();
		if (isset($_POST["request"])) {
			$request = json_decode($_POST["request"], true);
			// $request[0]["@_PARAM"] = $daoFactory->prepare($request[0]["@_PARAM"]); // Prepare with sql injection.
			
			$estabelecimentos = new model\Estabelecimentos();
			$estabelecimentos->setId($request["estabelecimentos.id"]);
			$estabelecimentos->setEstabelecimento(logicNull($request["estabelecimentos.estabelecimento"]));
			$estabelecimentos->setCnpj(logicNull($request["estabelecimentos.cnpj"]));
			$estabelecimentos->setTelefone(logicNull($request["estabelecimentos.telefone"]));
			$estabelecimentos->setCelular(logicNull($request["estabelecimentos.celular"]));
			$estabelecimentos->setCelular2(logicNull($request["estabelecimentos.celular2"]));
			$estabelecimentos->setEmail(logicNull($request["estabelecimentos.email"]));
			$estabelecimentos->setCadastrado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
			$estabelecimentos->setModificado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
			$estabelecimentos->setLogradouro(logicNull($request["estabelecimentos.logradouro"]));
			$estabelecimentos->setBairro(logicNull($request["estabelecimentos.bairro"]));
			$estabelecimentos->setNumero(logicZero($request["estabelecimentos.numero"]));
			$estabelecimentos->setCidade(logicNull($request["estabelecimentos.cidade"]));
			$estabelecimentos->setCep(logicNull($request["estabelecimentos.cep"]));
			
			$daoFactory->beginTransaction();
			$resultDao = $daoFactory->getEstabelecimentosDao()->update($estabelecimentos);

			if ($resultDao) {
				$daoFactory->commit();
				$response["message"] = "success";
			} else {							
				$daoFactory->rollback();
				$response["message"] = "error";
			}

			$daoFactory->close();
		} else {
			$response["message"] = "error";
		}
		
		echo $view->json($response);
	}
	
	/* 
	 * Delete
	 */
	else if ($method == "api-delete") {
		enableCORS();
		if (isset($_POST["request"])) {
			$request = json_decode($_POST["request"], true);
			$request["estabelecimentos.id"] = $daoFactory->prepare($request["estabelecimentos.id"]); // Prepare with sql injection.
				
			$result = true;
			$lines = explode("<gz>", $request["estabelecimentos.id"]);

			$daoFactory->beginTransaction();

			for ($i = 0; $i < sizeof($lines); $i++) {
				$where = "estabelecimentos.id = " . $lines[$i];
				
				$resultDao = $daoFactory->getEstabelecimentosDao()->delete($where);
				$result = !$result ? false : (!$resultDao ? false : true);
			}

			if ($result) {
				$daoFactory->commit();
				$response["message"] = "success";
			} else {							
				$daoFactory->rollback();
				$response["message"] = "error";
			}

			$daoFactory->close();
		} else {
			$response["message"] = "error";
		} 

		echo $view->json($response);
	}
	
	/**************************************************
	 * System
	 **************************************************/	
	
	else {
		if (!getActiveSession($_ROOT . $_MODULE)) 
			echo "<script>goTo(\"/login/1\");</script>";
		else {
			/*
			 * Create
			 */
			if ($method == "stateCreate") {
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method))
					echo "<script>goTo(\"/login/1\");</script>";	
				else {
					$daoFactory->beginTransaction();
					$response["titles"] = $daoFactory->getTelasDao()->read("telas.identificador = \"" . $screen . "\"", "", true);
					$daoFactory->close();

					echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . "/html/menus/menusCST.html", getMenu($daoFactory, $_USER, $screen));
					echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . "/html/estabelecimentos/estabelecimentosCRT.html", $response);
				}
			}

			/*
			 * Read
			 */
			else if ($method == "stateRead") {
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method))
					echo "<script>goTo(\"/login/1\");</script>";	
				else {
					$daoFactory->beginTransaction();
					$response["titles"] = $daoFactory->getTelasDao()->read("telas.identificador = \"" . $screen . "\"", "", true);
					$response["estabelecimentos"] = $daoFactory->getEstabelecimentosDao()->read($where, $limit, true);
					if (!is_array($response["estabelecimentos"])) {
						$response["data_not_found"][0]["value"] = "<p>NÃ£o possui registro.</p>";
					}
					$daoFactory->close();

					echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . "/html/menus/menusCST.html", getMenu($daoFactory, $_USER, $screen));
					echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . "/html/estabelecimentos/estabelecimentosRD.html", $response);
				}
			}

			/*
			 * Update
			 */
			else if ($method == "stateUpdate") {
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method))
					echo "<script>goTo(\"/login/1\");</script>";	
				else {
					$daoFactory->beginTransaction();
					$response["titles"] = $daoFactory->getTelasDao()->read("telas.identificador = \"" . $screen . "\"", "", true);
					$response["estabelecimentos"] = $daoFactory->getEstabelecimentosDao()->read($where, "", true);
					$daoFactory->close();

					echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . "/html/menus/menusCST.html", getMenu($daoFactory, $_USER, $screen));
					echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . "/html/estabelecimentos/estabelecimentosUPD.html", $response);
				}
			}

			/*
			 * Called
			 */
			else if ($method == "stateCalled") {
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method))
					echo "<script>goTo(\"/login/1\");</script>";	
				else {
					/*
					 * Insert your foreign key here
					 */
					if ($where != "")
						$where .= " AND estabelecimentos.@_FOREIGN_KEY = " . $base;
	
					else 
						$where = "estabelecimentos.@_FOREIGN_KEY = " . $base;
						

					
					$daoFactory->beginTransaction();
					$response["titles"] = $daoFactory->getTelasDao()->read("telas.identificador = \"" . $screen . "\"", "", true);
					$response["estabelecimentos"] = $daoFactory->getEstabelecimentosDao()->read($where, $limit, true);
					if (!is_array($response["estabelecimentos"])) {
						$response["data_not_found"][0]["value"] = "<p>NÃ£o possui registro.</p>";
					}
					$daoFactory->close();

					echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . "/html/menus/menusCST.html", getMenu($daoFactory, $_USER, $screen));
					echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . "/html/estabelecimentos/estabelecimentosCLL.html", $response);
				}
			}

			/*
			 * Screen
			 */
			else if ($method == "screen") {
				if ($base != "") {
					$arrBase = explode("<gz>", $base);
					
					if (sizeof($arrBase) > 1) {
						if ($where != "")
							$where .= " AND estabelecimentos.@_FOREIGN_KEY = " . $arrBase[1];
						else
							$where = "estabelecimentos.@_FOREIGN_KEY = " . $arrBase[1];
					}
				}
				
				$limit = "estabelecimentos.id DESC LIMIT " . (($position * 5) - 5) . ", 5";

				$daoFactory->beginTransaction();
				$response["titles"] = $daoFactory->getTelasDao()->read("telas.identificador = \"" . $screen . "\"", "", true);
				$response["estabelecimentos"] = $daoFactory->getEstabelecimentosDao()->read($where, $limit, true);
				$daoFactory->close();

				echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . "/html/estabelecimentos/estabelecimentosSCR.html", $response) . 
						"<size>" . (is_array($response["estabelecimentos"]) ? $response["estabelecimentos"][0]["estabelecimentos.size"] : 0) . "<theme>455a64";
			}

			/*
			 * Screen handler
			 */
			else if ($method == "screenHandler") {	
				$where = "";

				// Get value from combo
				$cmb = explode("<gz>", $search);

				if ($cmb[1] != "")
					$where = "estabelecimentos.id = " . $cmb[1];

				$daoFactory->beginTransaction();
				$response["estabelecimentos"] = $daoFactory->getEstabelecimentosDao()->comboScr($where);
				$daoFactory->close();

				echo $view->parse($_DOCUMENT_ROOT . $_PACKAGE . "/html/estabelecimentos/estabelecimentosCMB.html", $response);
			}

			/*
			 * Create
			 */
			else if ($method == "create") {
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method)) {
					$response["message"] = "permission";
					
					echo $view->json($response);
				} else {
					$estabelecimentos = new model\Estabelecimentos();
					$estabelecimentos->setEstabelecimento(logicNull($form[0]));
					$estabelecimentos->setCnpj(logicNull($form[1]));
					$estabelecimentos->setTelefone(logicNull($form[2]));
					$estabelecimentos->setCelular(logicNull($form[3]));
					$estabelecimentos->setCelular2(logicNull($form[4]));
					$estabelecimentos->setEmail(logicNull($form[5]));
					$estabelecimentos->setCadastrado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
					$estabelecimentos->setModificado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
					$estabelecimentos->setLogradouro(logicNull($form[6]));
					$estabelecimentos->setBairro(logicNull($form[7]));
					$estabelecimentos->setNumero(logicZero($form[8]));
					$estabelecimentos->setCidade(logicNull($form[9]));
					$estabelecimentos->setCep(logicNull($form[10]));
					
					$daoFactory->beginTransaction();
					$resultDao = $daoFactory->getEstabelecimentosDao()->create($estabelecimentos);

					if ($resultDao) {
						$daoFactory->commit();
						$response["message"] = "success";				
					} else {							
						$daoFactory->rollback();
						$response["message"] = "error";
					}

					$daoFactory->close();

					echo $view->json($response);
				}
			}

			/*
			 * Action update
			 */
			else if ($method == "update") {	
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method)) {
					$response["message"] = "permission";
					
					echo $view->json($response);
				} else {
					$estabelecimentos = new model\Estabelecimentos();
					$estabelecimentos->setId($code);
					$estabelecimentos->setEstabelecimento(logicNull($form[0]));
					$estabelecimentos->setCnpj(logicNull($form[1]));
					$estabelecimentos->setTelefone(logicNull($form[2]));
					$estabelecimentos->setCelular(logicNull($form[3]));
					$estabelecimentos->setCelular2(logicNull($form[4]));
					$estabelecimentos->setEmail(logicNull($form[5]));
					$estabelecimentos->setCadastrado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
					$estabelecimentos->setModificado(date("Y-m-d H:i:s", (time() - 3600 * 3)));
					$estabelecimentos->setLogradouro(logicNull($form[6]));
					$estabelecimentos->setBairro(logicNull($form[7]));
					$estabelecimentos->setNumero(logicZero($form[8]));
					$estabelecimentos->setCidade(logicNull($form[9]));
					$estabelecimentos->setCep(logicNull($form[10]));
					
					$daoFactory->beginTransaction();
					$resultDao = $daoFactory->getEstabelecimentosDao()->update($estabelecimentos);

					if ($resultDao) {
						$daoFactory->commit();
						$response["message"] = "success";
					} else {							
						$daoFactory->rollback();
						$response["message"] = "error";
					}

					$daoFactory->close();

					echo $view->json($response);
				}
			}
			
			/* 
			 * Action delete
			 */
			else if ($method == "delete") {
				if (!getPermission($_ROOT . $_MODULE, $daoFactory, $screen, $method)) {
					$response["message"] = "permission";
					
					echo $view->json($response);
				} else {
					$result = true;
					$lines = explode("<gz>", $code);

					$daoFactory->beginTransaction();

					for ($i = 1; $i < sizeof($lines); $i++) {
						$where = "estabelecimentos.id = " . $lines[$i];
						
						$resultDao = $daoFactory->getEstabelecimentosDao()->delete($where);
						$result = !$result ? false : (!$resultDao ? false : true);
					}

					if ($result) {
						$daoFactory->commit();
						$response["message"] = "success";
					} else {							
						$daoFactory->rollback();
						$response["message"] = "error";
					}

					$daoFactory->close();

					echo $view->json($response);	
				}
			}
		}
	}

?>